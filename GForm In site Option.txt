As of my last update in September 2021, there was no official API provided by Google to directly interact with Google Forms and autofill them from an external website. However, there might be alternative methods or workarounds that could help you achieve this functionality. Keep in mind that things may have changed since my last update, so I recommend checking the latest documentation or resources from Google on this matter.

One possible approach you can consider is using Google Apps Script, which allows you to create custom scripts to extend the functionality of various Google products, including Google Forms. Here's a general outline of how you can approach this:

Create your Google Form: First, create the Google Form with all the required fields and settings.

Create a Google Apps Script: Go to the Google Apps Script editor (script.google.com) and create a new script file. Write a function to handle form submissions.

Deploy the script: From the Apps Script editor, click on "Publish" and then "Deploy as web app." Configure the deployment settings, ensuring it can be accessed by anyone, including anonymous users. Take note of the web app URL generated after deployment.

Integrate with your website: In your website's submission page, gather the input from the user through text fields, checkboxes, and radio buttons.

Autofill the Google Form: When the user clicks the submit button on your website, use JavaScript to send the form data to the deployed Google Apps Script web app using HTTP requests. You can use the fetch API or any other AJAX methods to achieve this.

Process the data and submit to Google Form: In the Google Apps Script, receive the data from the HTTP request and use the script to programmatically submit the data to your original Google Form.

Keep in mind that this is a high-level overview, and you'll need to familiarize yourself with Google Apps Script and the specific APIs available for Google Forms to implement this effectively.

Before proceeding, please review the Google Apps Script documentation and terms of service to ensure your intended use complies with their policies. Additionally, I recommend checking for any new updates or official APIs from Google that may have been released since my last update.

Please note that third-party plugins or services might exist that claim to provide similar functionalities, but you should exercise caution when using third-party solutions and always ensure they are reputable and secure.